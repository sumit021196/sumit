import React, { lazy, Suspense } from 'react';
import { Box, Typography, Grid, Avatar, Paper, Skeleton, useMediaQuery, useTheme } from '@mui/material';
import { motion } from 'framer-motion';
import { LazyLoadComponent } from 'react-lazy-load-image-component';
import CodeIcon from '@mui/icons-material/Code';
import DesignServicesIcon from '@mui/icons-material/DesignServices';
import MobileFriendlyIcon from '@mui/icons-material/MobileFriendly';
import SchoolIcon from '@mui/icons-material/School';
import WorkIcon from '@mui/icons-material/Work';

// Lazy load heavy components
const SkillBar = lazy(() => import('../components/SkillBar'));
const ExperienceTimeline = lazy(() => import('../components/ExperienceTimeline'));

const skills = [
  { name: 'Frontend', level: 90, icon: <CodeIcon />, color: '#2196f3' },
  { name: 'Backend', level: 80, icon: <CodeIcon />, color: '#4caf50' },
  { name: 'UI/UX Design', level: 75, icon: <DesignServicesIcon />, color: '#ff9800' },
  { name: 'Mobile Development', level: 70, icon: <MobileFriendlyIcon />, color: '#9c27b0' },
];

const experiences = [
  {
    id: 1,
    role: 'Senior Frontend Developer',
    company: 'TechCorp',
    period: '2022 - Present',
    description: 'Leading frontend development team and implementing modern web applications.',
    icon: <WorkIcon />,
  },
  {
    id: 2,
    role: 'Full Stack Developer',
    company: 'WebSolutions Inc.',
    period: '2020 - 2022',
    description: 'Developed and maintained multiple web applications using modern technologies.',
    icon: <WorkIcon />,
  },
  {
    id: 3,
    role: 'Computer Science Degree',
    company: 'University of Technology',
    period: '2015 - 2019',
    description: 'Bachelor of Engineering in Electronics and Communication.',
    icon: <SchoolIcon />,
  },
];

const About = () => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));

  const container = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  };

  const item = {
    hidden: { opacity: 0, y: 20 },
    show: { opacity: 1, y: 0, transition: { duration: 0.5 } },
  };

  return (
    <Box
      component="section"
      id="about"
      sx={{
        py: { xs: 4, md: 8 },
        px: { xs: 2, sm: 4 },
        background: 'linear-gradient(to bottom, #f8f9fa 0%, #ffffff 100%)',
        minHeight: '100vh',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
      }}
    >
      <motion.div
        initial="hidden"
        whileInView="show"
        viewport={{ once: true, amount: 0.3 }}
        variants={container}
      >
        <motion.div variants={item}>
          <Typography
            variant={isMobile ? 'h4' : 'h3'}
            component="h2"
            gutterBottom
            sx={{
              fontWeight: 700,
              mb: 4,
              textAlign: 'center',
              background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
            }}
          >
            About Me
          </Typography>
        </motion.div>

        <Grid container spacing={4}>
          <Grid item xs={12} md={6}>
            <motion.div variants={item}>
              <Paper
                elevation={3}
                sx={{
                  p: 3,
                  height: '100%',
                  borderRadius: 2,
                  background: 'rgba(255, 255, 255, 0.9)',
                  backdropFilter: 'blur(10px)',
                }}
              >
                <Typography variant="h6" gutterBottom sx={{ fontWeight: 600, mb: 2 }}>
                  My Skills
                </Typography>
                <Suspense fallback={<Skeleton variant="rectangular" height={300} />}>
                  <LazyLoadComponent>
                    {skills.map((skill, index) => (
                      <Box key={skill.name} sx={{ mb: 3 }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <Box sx={{ mr: 1, color: skill.color }}>{skill.icon}</Box>
                          <Typography variant="subtitle2">{skill.name}</Typography>
                        </Box>
                        <Box
                          sx={{
                            height: 8,
                            width: '100%',
                            backgroundColor: 'rgba(0, 0, 0, 0.1)',
                            borderRadius: 4,
                            overflow: 'hidden',
                          }}
                        >
                          <motion.div
                            initial={{ width: 0 }}
                            animate={{ width: `${skill.level}%` }}
                            transition={{ duration: 1, delay: index * 0.1 }}
                            style={{
                              height: '100%',
                              background: `linear-gradient(90deg, ${skill.color} 0%, ${skill.color}80 100%)`,
                              borderRadius: 4,
                            }}
                          />
                        </Box>
                      </Box>
                    ))}
                  </LazyLoadComponent>
                </Suspense>
              </Paper>
            </motion.div>
          </Grid>

          <Grid item xs={12} md={6}>
            <motion.div variants={item}>
              <Paper
                elevation={3}
                sx={{
                  p: 3,
                  height: '100%',
                  borderRadius: 2,
                  background: 'rgba(255, 255, 255, 0.9)',
                  backdropFilter: 'blur(10px)',
                }}
              >
                <Typography variant="h6" gutterBottom sx={{ fontWeight: 600, mb: 2 }}>
                  Experience & Education
                </Typography>
                <Suspense fallback={<Skeleton variant="rectangular" height={300} />}>
                  <LazyLoadComponent>
                    {experiences.map((exp) => (
                      <motion.div
                        key={exp.id}
                        initial={{ opacity: 0, x: -20 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        viewport={{ once: true }}
                        transition={{ duration: 0.5, delay: exp.id * 0.1 }}
                        style={{ marginBottom: '1.5rem' }}
                      >
                        <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                          <Avatar
                            sx={{
                              bgcolor: 'primary.main',
                              width: 40,
                              height: 40,
                              mr: 2,
                              mt: 0.5,
                            }}
                          >
                            {exp.icon}
                          </Avatar>
                          <Box>
                            <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
                              {exp.role}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                              {exp.company} â€¢ {exp.period}
                            </Typography>
                            <Typography variant="body2" sx={{ mt: 1 }}>
                              {exp.description}
                            </Typography>
                          </Box>
                        </Box>
                        {exp.id < experiences.length && (
                          <Box
                            sx={{
                              height: '20px',
                              width: '2px',
                              bgcolor: 'divider',
                              ml: '19px',
                              mt: 1,
                              mb: -2,
                            }}
                          />
                        )}
                      </motion.div>
                    ))}
                  </LazyLoadComponent>
                </Suspense>
              </Paper>
            </motion.div>
          </Grid>
        </Grid>
      </motion.div>
    </Box>
  );
};

export default About;
